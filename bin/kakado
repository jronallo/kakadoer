#!/usr/bin/env ruby

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'kakadoer'
require 'rubygems'
require 'trollop'
require 'pp'

opts = Trollop::options do
  banner <<-EOS
This script take a directory of TIF files and creates JP2 access copies. If an
input directory is not set it will use the directory from which the script is run
to look for tifs. If an output directory is not set it will pick a directory up
one from the current directory and save the files in the jp2s directory. If that
directory is not present it will create it.

Usage:
  kakado --input tifs --output jp2s
  kakado --file photo.tif

where options are:
EOS
  opt :input, "Directory of batch of tifs", :type => String
  opt :output, "Directory to place new JP2s", :type => String
  opt :verbose, "Create verbose output"
  opt :ver, "Output the version number and exit."
  opt :file, "Takes a tif file and creates the JP2 in the current working directory or --output directory", :type => String
end

if opts[:ver]
  puts File.read(File.join(File.expand_path(File.dirname(__FILE__)), '..', 'VERSION' ) )
  exit
end

if opts[:file]
#  `kdu_compress -i #{opts[:file]} -o #{Dir.pwd}/. #{KAKADU_OPTIONS}`
  output = Kakadoer::Command.new(opts[:file]).kakado
else
  if opts[:input]
    input = opts[:input]
  else
    input = Dir.pwd
  end

  if opts[:output]
    output = opts[:output]
  else
    output = File.join(Dir.pwd, '..', 'jp2s')
    unless File.exists? output
      Dir.mkdir(output)
    end
  end

  kakado = Kakadoer::Batch.new(input, output)

  num_to_process = kakado.filenames.length
  puts "Number of files to process: " + num_to_process.to_s + "\n\n"
  exit if num_to_process == 0

  kakado.create_jp2s_with_output(opts[:verbose])
  kakado_output = kakado.log.join("\n")

  puts kakado_output
  timestamp = Time.now.strftime("%Y%d%m-%H%M%S")
  File.open('output-' + timestamp + '.txt', 'w') do |fh|
    fh.puts num_to_process
    fh.puts kakado_output
  end
end

